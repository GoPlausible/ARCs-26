{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 176,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 6 -> 13 -> 14 -> 15 -> 17 -> 7",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "20: main_set_asset_route@4:",
              "23: txn OnCompletion",
              "24: !",
              "25: assert",
              "26: txn ApplicationID",
              "27: assert",
              "30: txna ApplicationArgs 1",
              "31: btoi",
              "34: callsub set_asset"
            ],
            [
              "94: set_asset:",
              "98: proto 1 0",
              "102: txn Sender",
              "103: frame_dig -1",
              "104: asset_params_get AssetManager",
              "105: assert",
              "106: ==",
              "107: bz set_asset_bool_false@3"
            ],
            [
              "108: int 0",
              "112: byte \"asset_id\"",
              "116: app_global_get_ex",
              "117: assert",
              "118: bnz set_asset_bool_false@3"
            ],
            [
              "119: int 1",
              "120: b set_asset_bool_merge@4"
            ],
            [
              "125: set_asset_bool_merge@4:",
              "129: assert",
              "133: byte \"asset_id\"",
              "137: frame_dig -1",
              "138: app_global_put",
              "139: retsub"
            ],
            [
              "35: int 1",
              "36: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 6 -> 13 -> 14 -> 16 -> 17 -> 7",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "20: main_set_asset_route@4:",
              "23: txn OnCompletion",
              "24: !",
              "25: assert",
              "26: txn ApplicationID",
              "27: assert",
              "30: txna ApplicationArgs 1",
              "31: btoi",
              "34: callsub set_asset"
            ],
            [
              "94: set_asset:",
              "98: proto 1 0",
              "102: txn Sender",
              "103: frame_dig -1",
              "104: asset_params_get AssetManager",
              "105: assert",
              "106: ==",
              "107: bz set_asset_bool_false@3"
            ],
            [
              "108: int 0",
              "112: byte \"asset_id\"",
              "116: app_global_get_ex",
              "117: assert",
              "118: bnz set_asset_bool_false@3"
            ],
            [
              "122: set_asset_bool_false@3:",
              "123: int 0"
            ],
            [
              "125: set_asset_bool_merge@4:",
              "129: assert",
              "133: byte \"asset_id\"",
              "137: frame_dig -1",
              "138: app_global_put",
              "139: retsub"
            ],
            [
              "35: int 1",
              "36: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 6 -> 13 -> 16 -> 17 -> 7",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "20: main_set_asset_route@4:",
              "23: txn OnCompletion",
              "24: !",
              "25: assert",
              "26: txn ApplicationID",
              "27: assert",
              "30: txna ApplicationArgs 1",
              "31: btoi",
              "34: callsub set_asset"
            ],
            [
              "94: set_asset:",
              "98: proto 1 0",
              "102: txn Sender",
              "103: frame_dig -1",
              "104: asset_params_get AssetManager",
              "105: assert",
              "106: ==",
              "107: bz set_asset_bool_false@3"
            ],
            [
              "122: set_asset_bool_false@3:",
              "123: int 0"
            ],
            [
              "125: set_asset_bool_merge@4:",
              "129: assert",
              "133: byte \"asset_id\"",
              "137: frame_dig -1",
              "138: app_global_put",
              "139: retsub"
            ],
            [
              "35: int 1",
              "36: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 8 -> 18 -> 20 -> 23 -> 9",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "38: main_set_not_circulating_address_route@5:",
              "41: txn OnCompletion",
              "42: !",
              "43: assert",
              "44: txn ApplicationID",
              "45: assert",
              "48: txna ApplicationArgs 1",
              "49: txna ApplicationArgs 2",
              "50: extract 2 0",
              "53: callsub set_not_circulating_address"
            ],
            [
              "143: set_not_circulating_address:",
              "147: proto 2 0",
              "150: int 0",
              "154: byte \"asset_id\"",
              "157: app_global_get_ex",
              "158: assert",
              "162: txn Sender",
              "163: swap",
              "164: dup",
              "165: asset_params_get AssetManager",
              "166: assert",
              "167: uncover 2",
              "168: ==",
              "169: assert",
              "172: frame_dig -2",
              "173: len",
              "174: int 32",
              "175: ==",
              "176: assert",
              "177: frame_dig -2",
              "178: swap",
              "179: asset_holding_get AssetBalance",
              "180: bury 1",
              "181: assert",
              "184: byte \"burned\"",
              "187: byte \"locked\"",
              "190: byte \"generic\"",
              "202: frame_dig -1",
              "203: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "208: set_not_circulating_address_switch_case_0@1:",
              "211: byte \"burned\"",
              "214: frame_dig -2",
              "215: app_global_put",
              "216: b set_not_circulating_address_switch_case_next@5"
            ],
            [
              "237: set_not_circulating_address_switch_case_next@5:",
              "238: retsub"
            ],
            [
              "54: int 1",
              "55: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 8 -> 18 -> 21 -> 23 -> 9",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "38: main_set_not_circulating_address_route@5:",
              "41: txn OnCompletion",
              "42: !",
              "43: assert",
              "44: txn ApplicationID",
              "45: assert",
              "48: txna ApplicationArgs 1",
              "49: txna ApplicationArgs 2",
              "50: extract 2 0",
              "53: callsub set_not_circulating_address"
            ],
            [
              "143: set_not_circulating_address:",
              "147: proto 2 0",
              "150: int 0",
              "154: byte \"asset_id\"",
              "157: app_global_get_ex",
              "158: assert",
              "162: txn Sender",
              "163: swap",
              "164: dup",
              "165: asset_params_get AssetManager",
              "166: assert",
              "167: uncover 2",
              "168: ==",
              "169: assert",
              "172: frame_dig -2",
              "173: len",
              "174: int 32",
              "175: ==",
              "176: assert",
              "177: frame_dig -2",
              "178: swap",
              "179: asset_holding_get AssetBalance",
              "180: bury 1",
              "181: assert",
              "184: byte \"burned\"",
              "187: byte \"locked\"",
              "190: byte \"generic\"",
              "202: frame_dig -1",
              "203: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "218: set_not_circulating_address_switch_case_1@2:",
              "221: byte \"locked\"",
              "224: frame_dig -2",
              "225: app_global_put",
              "226: b set_not_circulating_address_switch_case_next@5"
            ],
            [
              "237: set_not_circulating_address_switch_case_next@5:",
              "238: retsub"
            ],
            [
              "54: int 1",
              "55: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 8 -> 18 -> 22 -> 23 -> 9",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "38: main_set_not_circulating_address_route@5:",
              "41: txn OnCompletion",
              "42: !",
              "43: assert",
              "44: txn ApplicationID",
              "45: assert",
              "48: txna ApplicationArgs 1",
              "49: txna ApplicationArgs 2",
              "50: extract 2 0",
              "53: callsub set_not_circulating_address"
            ],
            [
              "143: set_not_circulating_address:",
              "147: proto 2 0",
              "150: int 0",
              "154: byte \"asset_id\"",
              "157: app_global_get_ex",
              "158: assert",
              "162: txn Sender",
              "163: swap",
              "164: dup",
              "165: asset_params_get AssetManager",
              "166: assert",
              "167: uncover 2",
              "168: ==",
              "169: assert",
              "172: frame_dig -2",
              "173: len",
              "174: int 32",
              "175: ==",
              "176: assert",
              "177: frame_dig -2",
              "178: swap",
              "179: asset_holding_get AssetBalance",
              "180: bury 1",
              "181: assert",
              "184: byte \"burned\"",
              "187: byte \"locked\"",
              "190: byte \"generic\"",
              "202: frame_dig -1",
              "203: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "228: set_not_circulating_address_switch_case_2@3:",
              "231: byte \"generic\"",
              "234: frame_dig -2",
              "235: app_global_put"
            ],
            [
              "237: set_not_circulating_address_switch_case_next@5:",
              "238: retsub"
            ],
            [
              "54: int 1",
              "55: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 12",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "80: main_bare_routing@9:",
              "83: txn OnCompletion",
              "84: !",
              "85: assert",
              "86: txn ApplicationID",
              "87: !",
              "88: assert",
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 13 -> 14 -> 15 -> 17 -> 7",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "20: main_set_asset_route@4:",
              "23: txn OnCompletion",
              "24: !",
              "25: assert",
              "26: txn ApplicationID",
              "27: assert",
              "30: txna ApplicationArgs 1",
              "31: btoi",
              "34: callsub set_asset"
            ],
            [
              "94: set_asset:",
              "98: proto 1 0",
              "102: txn Sender",
              "103: frame_dig -1",
              "104: asset_params_get AssetManager",
              "105: assert",
              "106: ==",
              "107: bz set_asset_bool_false@3"
            ],
            [
              "108: int 0",
              "112: byte \"asset_id\"",
              "116: app_global_get_ex",
              "117: assert",
              "118: bnz set_asset_bool_false@3"
            ],
            [
              "119: int 1",
              "120: b set_asset_bool_merge@4"
            ],
            [
              "125: set_asset_bool_merge@4:",
              "129: assert",
              "133: byte \"asset_id\"",
              "137: frame_dig -1",
              "138: app_global_put",
              "139: retsub"
            ],
            [
              "35: int 1",
              "36: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 13 -> 14 -> 16 -> 17 -> 7",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "20: main_set_asset_route@4:",
              "23: txn OnCompletion",
              "24: !",
              "25: assert",
              "26: txn ApplicationID",
              "27: assert",
              "30: txna ApplicationArgs 1",
              "31: btoi",
              "34: callsub set_asset"
            ],
            [
              "94: set_asset:",
              "98: proto 1 0",
              "102: txn Sender",
              "103: frame_dig -1",
              "104: asset_params_get AssetManager",
              "105: assert",
              "106: ==",
              "107: bz set_asset_bool_false@3"
            ],
            [
              "108: int 0",
              "112: byte \"asset_id\"",
              "116: app_global_get_ex",
              "117: assert",
              "118: bnz set_asset_bool_false@3"
            ],
            [
              "122: set_asset_bool_false@3:",
              "123: int 0"
            ],
            [
              "125: set_asset_bool_merge@4:",
              "129: assert",
              "133: byte \"asset_id\"",
              "137: frame_dig -1",
              "138: app_global_put",
              "139: retsub"
            ],
            [
              "35: int 1",
              "36: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 13 -> 16 -> 17 -> 7",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "20: main_set_asset_route@4:",
              "23: txn OnCompletion",
              "24: !",
              "25: assert",
              "26: txn ApplicationID",
              "27: assert",
              "30: txna ApplicationArgs 1",
              "31: btoi",
              "34: callsub set_asset"
            ],
            [
              "94: set_asset:",
              "98: proto 1 0",
              "102: txn Sender",
              "103: frame_dig -1",
              "104: asset_params_get AssetManager",
              "105: assert",
              "106: ==",
              "107: bz set_asset_bool_false@3"
            ],
            [
              "122: set_asset_bool_false@3:",
              "123: int 0"
            ],
            [
              "125: set_asset_bool_merge@4:",
              "129: assert",
              "133: byte \"asset_id\"",
              "137: frame_dig -1",
              "138: app_global_put",
              "139: retsub"
            ],
            [
              "35: int 1",
              "36: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 18 -> 20 -> 23 -> 9",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "38: main_set_not_circulating_address_route@5:",
              "41: txn OnCompletion",
              "42: !",
              "43: assert",
              "44: txn ApplicationID",
              "45: assert",
              "48: txna ApplicationArgs 1",
              "49: txna ApplicationArgs 2",
              "50: extract 2 0",
              "53: callsub set_not_circulating_address"
            ],
            [
              "143: set_not_circulating_address:",
              "147: proto 2 0",
              "150: int 0",
              "154: byte \"asset_id\"",
              "157: app_global_get_ex",
              "158: assert",
              "162: txn Sender",
              "163: swap",
              "164: dup",
              "165: asset_params_get AssetManager",
              "166: assert",
              "167: uncover 2",
              "168: ==",
              "169: assert",
              "172: frame_dig -2",
              "173: len",
              "174: int 32",
              "175: ==",
              "176: assert",
              "177: frame_dig -2",
              "178: swap",
              "179: asset_holding_get AssetBalance",
              "180: bury 1",
              "181: assert",
              "184: byte \"burned\"",
              "187: byte \"locked\"",
              "190: byte \"generic\"",
              "202: frame_dig -1",
              "203: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "208: set_not_circulating_address_switch_case_0@1:",
              "211: byte \"burned\"",
              "214: frame_dig -2",
              "215: app_global_put",
              "216: b set_not_circulating_address_switch_case_next@5"
            ],
            [
              "237: set_not_circulating_address_switch_case_next@5:",
              "238: retsub"
            ],
            [
              "54: int 1",
              "55: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 18 -> 21 -> 23 -> 9",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "38: main_set_not_circulating_address_route@5:",
              "41: txn OnCompletion",
              "42: !",
              "43: assert",
              "44: txn ApplicationID",
              "45: assert",
              "48: txna ApplicationArgs 1",
              "49: txna ApplicationArgs 2",
              "50: extract 2 0",
              "53: callsub set_not_circulating_address"
            ],
            [
              "143: set_not_circulating_address:",
              "147: proto 2 0",
              "150: int 0",
              "154: byte \"asset_id\"",
              "157: app_global_get_ex",
              "158: assert",
              "162: txn Sender",
              "163: swap",
              "164: dup",
              "165: asset_params_get AssetManager",
              "166: assert",
              "167: uncover 2",
              "168: ==",
              "169: assert",
              "172: frame_dig -2",
              "173: len",
              "174: int 32",
              "175: ==",
              "176: assert",
              "177: frame_dig -2",
              "178: swap",
              "179: asset_holding_get AssetBalance",
              "180: bury 1",
              "181: assert",
              "184: byte \"burned\"",
              "187: byte \"locked\"",
              "190: byte \"generic\"",
              "202: frame_dig -1",
              "203: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "218: set_not_circulating_address_switch_case_1@2:",
              "221: byte \"locked\"",
              "224: frame_dig -2",
              "225: app_global_put",
              "226: b set_not_circulating_address_switch_case_next@5"
            ],
            [
              "237: set_not_circulating_address_switch_case_next@5:",
              "238: retsub"
            ],
            [
              "54: int 1",
              "55: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 18 -> 22 -> 23 -> 9",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "38: main_set_not_circulating_address_route@5:",
              "41: txn OnCompletion",
              "42: !",
              "43: assert",
              "44: txn ApplicationID",
              "45: assert",
              "48: txna ApplicationArgs 1",
              "49: txna ApplicationArgs 2",
              "50: extract 2 0",
              "53: callsub set_not_circulating_address"
            ],
            [
              "143: set_not_circulating_address:",
              "147: proto 2 0",
              "150: int 0",
              "154: byte \"asset_id\"",
              "157: app_global_get_ex",
              "158: assert",
              "162: txn Sender",
              "163: swap",
              "164: dup",
              "165: asset_params_get AssetManager",
              "166: assert",
              "167: uncover 2",
              "168: ==",
              "169: assert",
              "172: frame_dig -2",
              "173: len",
              "174: int 32",
              "175: ==",
              "176: assert",
              "177: frame_dig -2",
              "178: swap",
              "179: asset_holding_get AssetBalance",
              "180: bury 1",
              "181: assert",
              "184: byte \"burned\"",
              "187: byte \"locked\"",
              "190: byte \"generic\"",
              "202: frame_dig -1",
              "203: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "228: set_not_circulating_address_switch_case_2@3:",
              "231: byte \"generic\"",
              "234: frame_dig -2",
              "235: app_global_put"
            ],
            [
              "237: set_not_circulating_address_switch_case_next@5:",
              "238: retsub"
            ],
            [
              "54: int 1",
              "55: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 12",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "80: main_bare_routing@9:",
              "83: txn OnCompletion",
              "84: !",
              "85: assert",
              "86: txn ApplicationID",
              "87: !",
              "88: assert",
              "89: int 1",
              "90: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 176,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 6 -> 13 -> 14 -> 15 -> 17 -> 7",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "20: main_set_asset_route@4:",
              "23: txn OnCompletion",
              "24: !",
              "25: assert",
              "26: txn ApplicationID",
              "27: assert",
              "30: txna ApplicationArgs 1",
              "31: btoi",
              "34: callsub set_asset"
            ],
            [
              "94: set_asset:",
              "98: proto 1 0",
              "102: txn Sender",
              "103: frame_dig -1",
              "104: asset_params_get AssetManager",
              "105: assert",
              "106: ==",
              "107: bz set_asset_bool_false@3"
            ],
            [
              "108: int 0",
              "112: byte \"asset_id\"",
              "116: app_global_get_ex",
              "117: assert",
              "118: bnz set_asset_bool_false@3"
            ],
            [
              "119: int 1",
              "120: b set_asset_bool_merge@4"
            ],
            [
              "125: set_asset_bool_merge@4:",
              "129: assert",
              "133: byte \"asset_id\"",
              "137: frame_dig -1",
              "138: app_global_put",
              "139: retsub"
            ],
            [
              "35: int 1",
              "36: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 6 -> 13 -> 14 -> 16 -> 17 -> 7",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "20: main_set_asset_route@4:",
              "23: txn OnCompletion",
              "24: !",
              "25: assert",
              "26: txn ApplicationID",
              "27: assert",
              "30: txna ApplicationArgs 1",
              "31: btoi",
              "34: callsub set_asset"
            ],
            [
              "94: set_asset:",
              "98: proto 1 0",
              "102: txn Sender",
              "103: frame_dig -1",
              "104: asset_params_get AssetManager",
              "105: assert",
              "106: ==",
              "107: bz set_asset_bool_false@3"
            ],
            [
              "108: int 0",
              "112: byte \"asset_id\"",
              "116: app_global_get_ex",
              "117: assert",
              "118: bnz set_asset_bool_false@3"
            ],
            [
              "122: set_asset_bool_false@3:",
              "123: int 0"
            ],
            [
              "125: set_asset_bool_merge@4:",
              "129: assert",
              "133: byte \"asset_id\"",
              "137: frame_dig -1",
              "138: app_global_put",
              "139: retsub"
            ],
            [
              "35: int 1",
              "36: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 6 -> 13 -> 16 -> 17 -> 7",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "20: main_set_asset_route@4:",
              "23: txn OnCompletion",
              "24: !",
              "25: assert",
              "26: txn ApplicationID",
              "27: assert",
              "30: txna ApplicationArgs 1",
              "31: btoi",
              "34: callsub set_asset"
            ],
            [
              "94: set_asset:",
              "98: proto 1 0",
              "102: txn Sender",
              "103: frame_dig -1",
              "104: asset_params_get AssetManager",
              "105: assert",
              "106: ==",
              "107: bz set_asset_bool_false@3"
            ],
            [
              "122: set_asset_bool_false@3:",
              "123: int 0"
            ],
            [
              "125: set_asset_bool_merge@4:",
              "129: assert",
              "133: byte \"asset_id\"",
              "137: frame_dig -1",
              "138: app_global_put",
              "139: retsub"
            ],
            [
              "35: int 1",
              "36: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 8 -> 18 -> 20 -> 23 -> 9",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "38: main_set_not_circulating_address_route@5:",
              "41: txn OnCompletion",
              "42: !",
              "43: assert",
              "44: txn ApplicationID",
              "45: assert",
              "48: txna ApplicationArgs 1",
              "49: txna ApplicationArgs 2",
              "50: extract 2 0",
              "53: callsub set_not_circulating_address"
            ],
            [
              "143: set_not_circulating_address:",
              "147: proto 2 0",
              "150: int 0",
              "154: byte \"asset_id\"",
              "157: app_global_get_ex",
              "158: assert",
              "162: txn Sender",
              "163: swap",
              "164: dup",
              "165: asset_params_get AssetManager",
              "166: assert",
              "167: uncover 2",
              "168: ==",
              "169: assert",
              "172: frame_dig -2",
              "173: len",
              "174: int 32",
              "175: ==",
              "176: assert",
              "177: frame_dig -2",
              "178: swap",
              "179: asset_holding_get AssetBalance",
              "180: bury 1",
              "181: assert",
              "184: byte \"burned\"",
              "187: byte \"locked\"",
              "190: byte \"generic\"",
              "202: frame_dig -1",
              "203: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "208: set_not_circulating_address_switch_case_0@1:",
              "211: byte \"burned\"",
              "214: frame_dig -2",
              "215: app_global_put",
              "216: b set_not_circulating_address_switch_case_next@5"
            ],
            [
              "237: set_not_circulating_address_switch_case_next@5:",
              "238: retsub"
            ],
            [
              "54: int 1",
              "55: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 8 -> 18 -> 21 -> 23 -> 9",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "38: main_set_not_circulating_address_route@5:",
              "41: txn OnCompletion",
              "42: !",
              "43: assert",
              "44: txn ApplicationID",
              "45: assert",
              "48: txna ApplicationArgs 1",
              "49: txna ApplicationArgs 2",
              "50: extract 2 0",
              "53: callsub set_not_circulating_address"
            ],
            [
              "143: set_not_circulating_address:",
              "147: proto 2 0",
              "150: int 0",
              "154: byte \"asset_id\"",
              "157: app_global_get_ex",
              "158: assert",
              "162: txn Sender",
              "163: swap",
              "164: dup",
              "165: asset_params_get AssetManager",
              "166: assert",
              "167: uncover 2",
              "168: ==",
              "169: assert",
              "172: frame_dig -2",
              "173: len",
              "174: int 32",
              "175: ==",
              "176: assert",
              "177: frame_dig -2",
              "178: swap",
              "179: asset_holding_get AssetBalance",
              "180: bury 1",
              "181: assert",
              "184: byte \"burned\"",
              "187: byte \"locked\"",
              "190: byte \"generic\"",
              "202: frame_dig -1",
              "203: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "218: set_not_circulating_address_switch_case_1@2:",
              "221: byte \"locked\"",
              "224: frame_dig -2",
              "225: app_global_put",
              "226: b set_not_circulating_address_switch_case_next@5"
            ],
            [
              "237: set_not_circulating_address_switch_case_next@5:",
              "238: retsub"
            ],
            [
              "54: int 1",
              "55: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 8 -> 18 -> 22 -> 23 -> 9",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "38: main_set_not_circulating_address_route@5:",
              "41: txn OnCompletion",
              "42: !",
              "43: assert",
              "44: txn ApplicationID",
              "45: assert",
              "48: txna ApplicationArgs 1",
              "49: txna ApplicationArgs 2",
              "50: extract 2 0",
              "53: callsub set_not_circulating_address"
            ],
            [
              "143: set_not_circulating_address:",
              "147: proto 2 0",
              "150: int 0",
              "154: byte \"asset_id\"",
              "157: app_global_get_ex",
              "158: assert",
              "162: txn Sender",
              "163: swap",
              "164: dup",
              "165: asset_params_get AssetManager",
              "166: assert",
              "167: uncover 2",
              "168: ==",
              "169: assert",
              "172: frame_dig -2",
              "173: len",
              "174: int 32",
              "175: ==",
              "176: assert",
              "177: frame_dig -2",
              "178: swap",
              "179: asset_holding_get AssetBalance",
              "180: bury 1",
              "181: assert",
              "184: byte \"burned\"",
              "187: byte \"locked\"",
              "190: byte \"generic\"",
              "202: frame_dig -1",
              "203: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "228: set_not_circulating_address_switch_case_2@3:",
              "231: byte \"generic\"",
              "234: frame_dig -2",
              "235: app_global_put"
            ],
            [
              "237: set_not_circulating_address_switch_case_next@5:",
              "238: retsub"
            ],
            [
              "54: int 1",
              "55: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 41 -> 3 -> 12",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "6: callsub __init__"
            ],
            [
              "500: __init__:",
              "503: proto 0 0",
              "507: byte \"asset_id\"",
              "508: int 0",
              "509: app_global_put",
              "512: byte \"burned\"",
              "513: global ZeroAddress",
              "518: app_global_put",
              "521: byte \"locked\"",
              "522: global ZeroAddress",
              "527: app_global_put",
              "530: byte \"generic\"",
              "531: global ZeroAddress",
              "536: app_global_put",
              "537: retsub"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "80: main_bare_routing@9:",
              "83: txn OnCompletion",
              "84: !",
              "85: assert",
              "86: txn ApplicationID",
              "87: !",
              "88: assert",
              "89: int 1",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 13 -> 14 -> 15 -> 17 -> 7",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "20: main_set_asset_route@4:",
              "23: txn OnCompletion",
              "24: !",
              "25: assert",
              "26: txn ApplicationID",
              "27: assert",
              "30: txna ApplicationArgs 1",
              "31: btoi",
              "34: callsub set_asset"
            ],
            [
              "94: set_asset:",
              "98: proto 1 0",
              "102: txn Sender",
              "103: frame_dig -1",
              "104: asset_params_get AssetManager",
              "105: assert",
              "106: ==",
              "107: bz set_asset_bool_false@3"
            ],
            [
              "108: int 0",
              "112: byte \"asset_id\"",
              "116: app_global_get_ex",
              "117: assert",
              "118: bnz set_asset_bool_false@3"
            ],
            [
              "119: int 1",
              "120: b set_asset_bool_merge@4"
            ],
            [
              "125: set_asset_bool_merge@4:",
              "129: assert",
              "133: byte \"asset_id\"",
              "137: frame_dig -1",
              "138: app_global_put",
              "139: retsub"
            ],
            [
              "35: int 1",
              "36: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 13 -> 14 -> 16 -> 17 -> 7",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "20: main_set_asset_route@4:",
              "23: txn OnCompletion",
              "24: !",
              "25: assert",
              "26: txn ApplicationID",
              "27: assert",
              "30: txna ApplicationArgs 1",
              "31: btoi",
              "34: callsub set_asset"
            ],
            [
              "94: set_asset:",
              "98: proto 1 0",
              "102: txn Sender",
              "103: frame_dig -1",
              "104: asset_params_get AssetManager",
              "105: assert",
              "106: ==",
              "107: bz set_asset_bool_false@3"
            ],
            [
              "108: int 0",
              "112: byte \"asset_id\"",
              "116: app_global_get_ex",
              "117: assert",
              "118: bnz set_asset_bool_false@3"
            ],
            [
              "122: set_asset_bool_false@3:",
              "123: int 0"
            ],
            [
              "125: set_asset_bool_merge@4:",
              "129: assert",
              "133: byte \"asset_id\"",
              "137: frame_dig -1",
              "138: app_global_put",
              "139: retsub"
            ],
            [
              "35: int 1",
              "36: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 13 -> 16 -> 17 -> 7",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "20: main_set_asset_route@4:",
              "23: txn OnCompletion",
              "24: !",
              "25: assert",
              "26: txn ApplicationID",
              "27: assert",
              "30: txna ApplicationArgs 1",
              "31: btoi",
              "34: callsub set_asset"
            ],
            [
              "94: set_asset:",
              "98: proto 1 0",
              "102: txn Sender",
              "103: frame_dig -1",
              "104: asset_params_get AssetManager",
              "105: assert",
              "106: ==",
              "107: bz set_asset_bool_false@3"
            ],
            [
              "122: set_asset_bool_false@3:",
              "123: int 0"
            ],
            [
              "125: set_asset_bool_merge@4:",
              "129: assert",
              "133: byte \"asset_id\"",
              "137: frame_dig -1",
              "138: app_global_put",
              "139: retsub"
            ],
            [
              "35: int 1",
              "36: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 18 -> 20 -> 23 -> 9",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "38: main_set_not_circulating_address_route@5:",
              "41: txn OnCompletion",
              "42: !",
              "43: assert",
              "44: txn ApplicationID",
              "45: assert",
              "48: txna ApplicationArgs 1",
              "49: txna ApplicationArgs 2",
              "50: extract 2 0",
              "53: callsub set_not_circulating_address"
            ],
            [
              "143: set_not_circulating_address:",
              "147: proto 2 0",
              "150: int 0",
              "154: byte \"asset_id\"",
              "157: app_global_get_ex",
              "158: assert",
              "162: txn Sender",
              "163: swap",
              "164: dup",
              "165: asset_params_get AssetManager",
              "166: assert",
              "167: uncover 2",
              "168: ==",
              "169: assert",
              "172: frame_dig -2",
              "173: len",
              "174: int 32",
              "175: ==",
              "176: assert",
              "177: frame_dig -2",
              "178: swap",
              "179: asset_holding_get AssetBalance",
              "180: bury 1",
              "181: assert",
              "184: byte \"burned\"",
              "187: byte \"locked\"",
              "190: byte \"generic\"",
              "202: frame_dig -1",
              "203: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "208: set_not_circulating_address_switch_case_0@1:",
              "211: byte \"burned\"",
              "214: frame_dig -2",
              "215: app_global_put",
              "216: b set_not_circulating_address_switch_case_next@5"
            ],
            [
              "237: set_not_circulating_address_switch_case_next@5:",
              "238: retsub"
            ],
            [
              "54: int 1",
              "55: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 18 -> 21 -> 23 -> 9",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "38: main_set_not_circulating_address_route@5:",
              "41: txn OnCompletion",
              "42: !",
              "43: assert",
              "44: txn ApplicationID",
              "45: assert",
              "48: txna ApplicationArgs 1",
              "49: txna ApplicationArgs 2",
              "50: extract 2 0",
              "53: callsub set_not_circulating_address"
            ],
            [
              "143: set_not_circulating_address:",
              "147: proto 2 0",
              "150: int 0",
              "154: byte \"asset_id\"",
              "157: app_global_get_ex",
              "158: assert",
              "162: txn Sender",
              "163: swap",
              "164: dup",
              "165: asset_params_get AssetManager",
              "166: assert",
              "167: uncover 2",
              "168: ==",
              "169: assert",
              "172: frame_dig -2",
              "173: len",
              "174: int 32",
              "175: ==",
              "176: assert",
              "177: frame_dig -2",
              "178: swap",
              "179: asset_holding_get AssetBalance",
              "180: bury 1",
              "181: assert",
              "184: byte \"burned\"",
              "187: byte \"locked\"",
              "190: byte \"generic\"",
              "202: frame_dig -1",
              "203: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "218: set_not_circulating_address_switch_case_1@2:",
              "221: byte \"locked\"",
              "224: frame_dig -2",
              "225: app_global_put",
              "226: b set_not_circulating_address_switch_case_next@5"
            ],
            [
              "237: set_not_circulating_address_switch_case_next@5:",
              "238: retsub"
            ],
            [
              "54: int 1",
              "55: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 18 -> 22 -> 23 -> 9",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "38: main_set_not_circulating_address_route@5:",
              "41: txn OnCompletion",
              "42: !",
              "43: assert",
              "44: txn ApplicationID",
              "45: assert",
              "48: txna ApplicationArgs 1",
              "49: txna ApplicationArgs 2",
              "50: extract 2 0",
              "53: callsub set_not_circulating_address"
            ],
            [
              "143: set_not_circulating_address:",
              "147: proto 2 0",
              "150: int 0",
              "154: byte \"asset_id\"",
              "157: app_global_get_ex",
              "158: assert",
              "162: txn Sender",
              "163: swap",
              "164: dup",
              "165: asset_params_get AssetManager",
              "166: assert",
              "167: uncover 2",
              "168: ==",
              "169: assert",
              "172: frame_dig -2",
              "173: len",
              "174: int 32",
              "175: ==",
              "176: assert",
              "177: frame_dig -2",
              "178: swap",
              "179: asset_holding_get AssetBalance",
              "180: bury 1",
              "181: assert",
              "184: byte \"burned\"",
              "187: byte \"locked\"",
              "190: byte \"generic\"",
              "202: frame_dig -1",
              "203: match set_not_circulating_address_switch_case_0@1 set_not_circulating_address_switch_case_1@2 set_not_circulating_address_switch_case_2@3"
            ],
            [
              "228: set_not_circulating_address_switch_case_2@3:",
              "231: byte \"generic\"",
              "234: frame_dig -2",
              "235: app_global_put"
            ],
            [
              "237: set_not_circulating_address_switch_case_next@5:",
              "238: retsub"
            ],
            [
              "54: int 1",
              "55: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 25 -> 27 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "329: frame_dig -1",
              "330: asset_params_get AssetReserve",
              "331: assert",
              "332: frame_dig -1",
              "333: asset_holding_get AssetBalance",
              "334: bury 1",
              "335: bnz arc62_get_circulating_supply_ternary_false@3"
            ],
            [
              "344: arc62_get_circulating_supply_ternary_false@3:",
              "347: frame_dig -1",
              "348: asset_params_get AssetReserve",
              "349: assert",
              "350: frame_dig -1",
              "351: asset_holding_get AssetBalance",
              "352: assert",
              "353: frame_bury 2"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 29 -> 31 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "367: frame_dig 3",
              "368: frame_dig -1",
              "369: asset_holding_get AssetBalance",
              "370: bury 1",
              "371: bnz arc62_get_circulating_supply_ternary_false@7"
            ],
            [
              "380: arc62_get_circulating_supply_ternary_false@7:",
              "383: frame_dig 3",
              "384: frame_dig -1",
              "385: asset_holding_get AssetBalance",
              "386: assert",
              "387: frame_bury 0"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 33 -> 35 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "401: frame_dig 4",
              "402: frame_dig -1",
              "403: asset_holding_get AssetBalance",
              "404: bury 1",
              "405: bnz arc62_get_circulating_supply_ternary_false@11"
            ],
            [
              "414: arc62_get_circulating_supply_ternary_false@11:",
              "417: frame_dig 4",
              "418: frame_dig -1",
              "419: asset_holding_get AssetBalance",
              "420: assert",
              "421: frame_bury 1"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 37 -> 39 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "435: frame_dig 5",
              "436: frame_dig -1",
              "437: asset_holding_get AssetBalance",
              "438: bury 1",
              "439: bnz arc62_get_circulating_supply_ternary_false@15"
            ],
            [
              "447: arc62_get_circulating_supply_ternary_false@15:",
              "450: frame_dig 5",
              "451: frame_dig -1",
              "452: asset_holding_get AssetBalance",
              "453: assert"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 24 -> 26 -> 28 -> 30 -> 32 -> 34 -> 36 -> 38 -> 40 -> 11",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "13: method set_asset(uint64)void",
              "14: method set_not_circulating_address(address,string)void",
              "15: method arc62_get_circulating_supply(uint64)uint64",
              "16: txna ApplicationArgs 0",
              "17: match main_set_asset_route@4 main_set_not_circulating_address_route@5 main_arc62_get_circulating_supply_route@6"
            ],
            [
              "57: main_arc62_get_circulating_supply_route@6:",
              "60: txn OnCompletion",
              "61: !",
              "62: assert",
              "63: txn ApplicationID",
              "64: assert",
              "67: txna ApplicationArgs 1",
              "68: btoi",
              "71: callsub arc62_get_circulating_supply"
            ],
            [
              "242: arc62_get_circulating_supply:",
              "246: proto 1 1",
              "247: byte \"\"",
              "248: dupn 2",
              "251: int 0",
              "254: byte \"burned\"",
              "257: app_global_get_ex",
              "258: swap",
              "259: dup",
              "260: uncover 2",
              "261: assert",
              "262: len",
              "263: int 32",
              "264: ==",
              "265: assert",
              "268: int 0",
              "271: byte \"locked\"",
              "274: app_global_get_ex",
              "275: swap",
              "276: dup",
              "277: uncover 2",
              "278: assert",
              "279: len",
              "280: int 32",
              "281: ==",
              "282: assert",
              "285: int 0",
              "288: byte \"generic\"",
              "291: app_global_get_ex",
              "292: swap",
              "293: dup",
              "294: uncover 2",
              "295: assert",
              "296: len",
              "297: int 32",
              "298: ==",
              "299: assert",
              "303: int 0",
              "307: byte \"asset_id\"",
              "311: app_global_get_ex",
              "312: assert",
              "313: frame_dig -1",
              "314: ==",
              "315: assert",
              "318: frame_dig -1",
              "319: asset_params_get AssetReserve",
              "320: assert",
              "321: global ZeroAddress",
              "322: ==",
              "326: bnz arc62_get_circulating_supply_ternary_true@2"
            ],
            [
              "337: arc62_get_circulating_supply_ternary_true@2:",
              "340: int 0",
              "341: frame_bury 2",
              "342: b arc62_get_circulating_supply_ternary_merge@4"
            ],
            [
              "355: arc62_get_circulating_supply_ternary_merge@4:",
              "358: frame_dig 3",
              "359: global ZeroAddress",
              "360: ==",
              "364: bnz arc62_get_circulating_supply_ternary_true@6"
            ],
            [
              "373: arc62_get_circulating_supply_ternary_true@6:",
              "376: int 0",
              "377: frame_bury 0",
              "378: b arc62_get_circulating_supply_ternary_merge@8"
            ],
            [
              "389: arc62_get_circulating_supply_ternary_merge@8:",
              "392: frame_dig 4",
              "393: global ZeroAddress",
              "394: ==",
              "398: bnz arc62_get_circulating_supply_ternary_true@10"
            ],
            [
              "407: arc62_get_circulating_supply_ternary_true@10:",
              "410: int 0",
              "411: frame_bury 1",
              "412: b arc62_get_circulating_supply_ternary_merge@12"
            ],
            [
              "423: arc62_get_circulating_supply_ternary_merge@12:",
              "426: frame_dig 5",
              "427: global ZeroAddress",
              "428: ==",
              "432: bnz arc62_get_circulating_supply_ternary_true@14"
            ],
            [
              "441: arc62_get_circulating_supply_ternary_true@14:",
              "444: int 0",
              "445: b arc62_get_circulating_supply_ternary_merge@16"
            ],
            [
              "455: arc62_get_circulating_supply_ternary_merge@16:",
              "458: frame_dig -1",
              "459: asset_params_get AssetTotal",
              "460: assert",
              "464: frame_dig 2",
              "465: -",
              "470: frame_dig 0",
              "471: -",
              "477: frame_dig 1",
              "478: -",
              "485: swap",
              "486: -",
              "495: frame_bury 0",
              "496: retsub"
            ],
            [
              "72: itob",
              "73: byte 0x151f7c75",
              "74: swap",
              "75: concat",
              "76: log",
              "77: int 1",
              "78: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 12",
          "blocks": [
            [
              "1: #pragma version 10"
            ],
            [
              "3: smart_contracts.circulating_supply.contract.CirculatingSupply.approval_program:",
              "4: txn ApplicationID",
              "5: bnz main_entrypoint@2"
            ],
            [
              "8: main_entrypoint@2:",
              "11: txn NumAppArgs",
              "12: bz main_bare_routing@9"
            ],
            [
              "80: main_bare_routing@9:",
              "83: txn OnCompletion",
              "84: !",
              "85: assert",
              "86: txn ApplicationID",
              "87: !",
              "88: assert",
              "89: int 1",
              "90: return"
            ]
          ]
        }
      ]
    }
  ]
}